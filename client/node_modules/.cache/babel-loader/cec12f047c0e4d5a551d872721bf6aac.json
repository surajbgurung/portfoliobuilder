{"ast":null,"code":"import _slicedToArray from \"/Users/surajgurung/Desktop/portfoliobuilder/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _toConsumableArray from \"/Users/surajgurung/Desktop/portfoliobuilder/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nvar _jsxFileName = \"/Users/surajgurung/Desktop/portfoliobuilder/client/src/components/TransferList/index.js\";\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport List from '@material-ui/core/List';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Button from '@material-ui/core/Button';\nimport Divider from '@material-ui/core/Divider';\nimport { lightBlue } from '@material-ui/core/colors';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      margin: 'auto'\n    },\n    cardHeader: {\n      padding: theme.spacing(1, 2)\n    },\n    list: {\n      width: 200,\n      height: 230,\n      backgroundColor: theme.palette.background.paper,\n      overflow: 'auto'\n    },\n    button: {\n      margin: theme.spacing(0.5, 0)\n    },\n    Color: lightBlue\n  };\n});\n\nfunction not(a, b) {\n  return a.filter(function (value) {\n    return b.indexOf(value) === -1;\n  });\n}\n\nfunction intersection(a, b) {\n  return a.filter(function (value) {\n    return b.indexOf(value) !== -1;\n  });\n}\n\nfunction union(a, b) {\n  return [].concat(_toConsumableArray(a), _toConsumableArray(not(b, a)));\n}\n\nexport default function TransferList() {\n  var _this = this;\n\n  var classes = useStyles();\n\n  var _React$useState = React.useState([]),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      checked = _React$useState2[0],\n      setChecked = _React$useState2[1];\n\n  var _React$useState3 = React.useState(['Paneer Tikka Masala', 'Tandoori Naan', \"Chicken Tandoori\", 'Butter Naan']),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      left = _React$useState4[0],\n      setLeft = _React$useState4[1];\n\n  var _React$useState5 = React.useState([\"Kulfi\", \"Shakes\", \"Coke\", \"Pepsi\"]),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      right = _React$useState6[0],\n      setRight = _React$useState6[1];\n\n  var leftChecked = intersection(checked, left);\n  var rightChecked = intersection(checked, right);\n\n  var handleToggle = function handleToggle(value) {\n    return function () {\n      var currentIndex = checked.indexOf(value);\n\n      var newChecked = _toConsumableArray(checked);\n\n      if (currentIndex === -1) {\n        newChecked.push(value);\n      } else {\n        newChecked.splice(currentIndex, 1);\n      }\n\n      setChecked(newChecked);\n    };\n  };\n\n  var numberOfChecked = function numberOfChecked(items) {\n    return intersection(checked, items).length;\n  };\n\n  var handleToggleAll = function handleToggleAll(items) {\n    return function () {\n      if (numberOfChecked(items) === items.length) {\n        setChecked(not(checked, items));\n      } else {\n        setChecked(union(checked, items));\n      }\n    };\n  };\n\n  var handleCheckedRight = function handleCheckedRight() {\n    setRight(right.concat(leftChecked));\n    setLeft(not(left, leftChecked));\n    setChecked(not(checked, leftChecked));\n  };\n\n  var handleCheckedLeft = function handleCheckedLeft() {\n    setLeft(left.concat(rightChecked));\n    setRight(not(right, rightChecked));\n    setChecked(not(checked, rightChecked));\n  };\n\n  var customList = function customList(title, items) {\n    return /*#__PURE__*/React.createElement(Card, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(CardHeader, {\n      className: classes.cardHeader,\n      avatar: /*#__PURE__*/React.createElement(Checkbox, {\n        onClick: handleToggleAll(items),\n        checked: numberOfChecked(items) === items.length && items.length !== 0,\n        indeterminate: numberOfChecked(items) !== items.length && numberOfChecked(items) !== 0,\n        disabled: items.length === 0,\n        inputProps: {\n          'aria-label': 'all items selected'\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }\n      }),\n      title: title,\n      subheader: \"\".concat(numberOfChecked(items), \"/\").concat(items.length, \" selected\"),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(Divider, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(List, {\n      className: classes.list,\n      dense: true,\n      component: \"div\",\n      role: \"list\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 7\n      }\n    }, items.map(function (value) {\n      var labelId = \"transfer-list-all-item-\".concat(value, \"-label\");\n      return /*#__PURE__*/React.createElement(ListItem, {\n        key: value,\n        role: \"listitem\",\n        button: true,\n        onClick: handleToggle(value),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(ListItemIcon, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Checkbox, {\n        checked: checked.indexOf(value) !== -1,\n        tabIndex: -1,\n        disableRipple: true,\n        inputProps: {\n          'aria-labelledby': labelId\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(ListItemText, {\n        id: labelId,\n        primary: \"List item \".concat(value + 1),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 15\n        }\n      }));\n    }), /*#__PURE__*/React.createElement(ListItem, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }\n    })));\n  };\n\n  return /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    justify: \"center\",\n    alignItems: \"center\",\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }\n  }, customList('Choices', left)), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"column\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"outlined\",\n    size: \"small\",\n    className: classes.button,\n    onClick: handleCheckedRight,\n    disabled: leftChecked.length === 0,\n    \"aria-label\": \"move selected right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 11\n    }\n  }, \">\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"outlined\",\n    size: \"small\",\n    className: classes.button,\n    onClick: handleCheckedLeft,\n    disabled: rightChecked.length === 0,\n    \"aria-label\": \"move selected left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 11\n    }\n  }, \"<\"))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }\n  }, customList('Chosen', right)));\n}","map":{"version":3,"sources":["/Users/surajgurung/Desktop/portfoliobuilder/client/src/components/TransferList/index.js"],"names":["React","makeStyles","Grid","List","Card","CardHeader","ListItem","ListItemText","ListItemIcon","Checkbox","Button","Divider","lightBlue","useStyles","theme","root","margin","cardHeader","padding","spacing","list","width","height","backgroundColor","palette","background","paper","overflow","button","Color","not","a","b","filter","value","indexOf","intersection","union","TransferList","classes","useState","checked","setChecked","left","setLeft","right","setRight","leftChecked","rightChecked","handleToggle","currentIndex","newChecked","push","splice","numberOfChecked","items","length","handleToggleAll","handleCheckedRight","concat","handleCheckedLeft","customList","title","map","labelId"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport List from '@material-ui/core/List';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Button from '@material-ui/core/Button';\nimport Divider from '@material-ui/core/Divider';\nimport { lightBlue } from '@material-ui/core/colors';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    margin: 'auto',\n  },\n  cardHeader: {\n    padding: theme.spacing(1, 2),\n  },\n  list: {\n    width: 200,\n    height: 230,\n    backgroundColor: theme.palette.background.paper,\n    overflow: 'auto',\n  },\n  button: {\n    margin: theme.spacing(0.5, 0),\n  },\n  Color:lightBlue,\n}));\n\nfunction not(a, b) {\n  return a.filter((value) => b.indexOf(value) === -1);\n}\n\nfunction intersection(a, b) {\n  return a.filter((value) => b.indexOf(value) !== -1);\n}\n\nfunction union(a, b) {\n  return [...a, ...not(b, a)];\n}\n\nexport default function TransferList() {\n  const classes = useStyles();\n  const [checked, setChecked] = React.useState([]);\n  const [left, setLeft] = React.useState(['Paneer Tikka Masala', 'Tandoori Naan', \"Chicken Tandoori\", 'Butter Naan']);\n  const [right, setRight] = React.useState([\"Kulfi\", \"Shakes\", \"Coke\", \"Pepsi\"]);\n\n  const leftChecked = intersection(checked, left);\n  const rightChecked = intersection(checked, right);\n\n  const handleToggle = (value) => () => {\n    const currentIndex = checked.indexOf(value);\n    const newChecked = [...checked];\n\n    if (currentIndex === -1) {\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n\n    setChecked(newChecked);\n  };\n\n  const numberOfChecked = (items) => intersection(checked, items).length;\n\n  const handleToggleAll = (items) => () => {\n    if (numberOfChecked(items) === items.length) {\n      setChecked(not(checked, items));\n    } else {\n      setChecked(union(checked, items));\n    }\n  };\n\n  const handleCheckedRight = () => {\n    setRight(right.concat(leftChecked));\n    setLeft(not(left, leftChecked));\n    setChecked(not(checked, leftChecked));\n  };\n\n  const handleCheckedLeft = () => {\n    setLeft(left.concat(rightChecked));\n    setRight(not(right, rightChecked));\n    setChecked(not(checked, rightChecked));\n  };\n\n  const customList = (title, items) => (\n    <Card>\n      <CardHeader\n        className={classes.cardHeader}\n        avatar={\n          <Checkbox\n            onClick={handleToggleAll(items)}\n            checked={numberOfChecked(items) === items.length && items.length !== 0}\n            indeterminate={numberOfChecked(items) !== items.length && numberOfChecked(items) !== 0}\n            disabled={items.length === 0}\n            inputProps={{ 'aria-label': 'all items selected' }}\n          />\n        }\n        title={title}\n        subheader={`${numberOfChecked(items)}/${items.length} selected`}\n      />\n      <Divider />\n      <List className={classes.list} dense component=\"div\" role=\"list\">\n        {items.map((value) => {\n          const labelId = `transfer-list-all-item-${value}-label`;\n\n          return (\n            <ListItem key={value} role=\"listitem\" button onClick={handleToggle(value)}>\n              <ListItemIcon>\n                <Checkbox\n                  checked={checked.indexOf(value) !== -1}\n                  tabIndex={-1}\n                  disableRipple\n                  inputProps={{ 'aria-labelledby': labelId }}\n                />\n              </ListItemIcon>\n              <ListItemText id={labelId} primary={`List item ${value + 1}`} />\n            </ListItem>\n          );\n        })}\n        <ListItem />\n      </List>\n    </Card>\n  );\n\n  return (\n    <Grid container spacing={2} justify=\"center\" alignItems=\"center\" className={classes.root}>\n      <Grid item>{customList('Choices', left)}</Grid>\n      <Grid item>\n        <Grid container direction=\"column\" alignItems=\"center\">\n          <Button\n            variant=\"outlined\"\n            size=\"small\"\n            className={classes.button}\n            onClick={handleCheckedRight}\n            disabled={leftChecked.length === 0}\n            aria-label=\"move selected right\"\n          >\n            &gt;\n          </Button>\n          <Button\n            variant=\"outlined\"\n            size=\"small\"\n            className={classes.button}\n            onClick={handleCheckedLeft}\n            disabled={rightChecked.length === 0}\n            aria-label=\"move selected left\"\n          >\n            &lt;\n          </Button>\n        </Grid>\n      </Grid>\n      <Grid item>{customList('Chosen', right)}</Grid>\n    </Grid>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}