{"ast":null,"code":"import _slicedToArray from \"/Users/surajgurung/Desktop/portfoliobuilder/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _defineProperty from \"/Users/surajgurung/Desktop/portfoliobuilder/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/surajgurung/Desktop/portfoliobuilder/client/src/components/Stepper/index.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Check from '@material-ui/icons/Check';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport GroupAddIcon from '@material-ui/icons/GroupAdd';\nimport VideoLabelIcon from '@material-ui/icons/VideoLabel';\nimport StepConnector from '@material-ui/core/StepConnector';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nvar QontoConnector = withStyles({\n  alternativeLabel: {\n    top: 10,\n    left: 'calc(-50% + 16px)',\n    right: 'calc(50% + 16px)'\n  },\n  active: {\n    '& $line': {\n      borderColor: '#784af4'\n    }\n  },\n  completed: {\n    '& $line': {\n      borderColor: '#784af4'\n    }\n  },\n  line: {\n    borderColor: '#eaeaf0',\n    borderTopWidth: 3,\n    borderRadius: 1\n  }\n})(StepConnector);\nvar useQontoStepIconStyles = makeStyles({\n  root: {\n    color: '#eaeaf0',\n    display: 'flex',\n    height: 22,\n    alignItems: 'center'\n  },\n  active: {\n    color: '#784af4'\n  },\n  circle: {\n    width: 8,\n    height: 8,\n    borderRadius: '50%',\n    backgroundColor: 'currentColor'\n  },\n  completed: {\n    color: '#784af4',\n    zIndex: 1,\n    fontSize: 18\n  }\n});\n\nfunction QontoStepIcon(props) {\n  var classes = useQontoStepIconStyles();\n  var active = props.active,\n      completed = props.completed;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: clsx(classes.root, _defineProperty({}, classes.active, active)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }\n  }, completed ? /*#__PURE__*/React.createElement(Check, {\n    className: classes.completed,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 20\n    }\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.circle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 62\n    }\n  }));\n}\n\nQontoStepIcon.propTypes = {\n  /**\n   * Whether this step is active.\n   */\n  active: PropTypes.bool,\n\n  /**\n   * Mark the step as completed. Is passed to child components.\n   */\n  completed: PropTypes.bool\n};\nvar ColorlibConnector = withStyles({\n  alternativeLabel: {\n    top: 22\n  },\n  active: {\n    '& $line': {\n      backgroundImage: 'linear-gradient( 95deg,rgb(242,113,33) 0%,rgb(233,64,87) 50%,rgb(138,35,135) 100%)'\n    }\n  },\n  completed: {\n    '& $line': {\n      backgroundImage: 'linear-gradient( 95deg,rgb(242,113,33) 0%,rgb(233,64,87) 50%,rgb(138,35,135) 100%)'\n    }\n  },\n  line: {\n    height: 3,\n    border: 0,\n    backgroundColor: '#eaeaf0',\n    borderRadius: 1\n  }\n})(StepConnector);\nvar useColorlibStepIconStyles = makeStyles({\n  root: {\n    backgroundColor: '#ccc',\n    zIndex: 1,\n    color: '#fff',\n    width: 50,\n    height: 50,\n    display: 'flex',\n    borderRadius: '50%',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  active: {\n    backgroundImage: 'linear-gradient( 136deg, rgb(242,113,33) 0%, rgb(233,64,87) 50%, rgb(138,35,135) 100%)',\n    boxShadow: '0 4px 10px 0 rgba(0,0,0,.25)'\n  },\n  completed: {\n    backgroundImage: 'linear-gradient( 136deg, rgb(242,113,33) 0%, rgb(233,64,87) 50%, rgb(138,35,135) 100%)'\n  }\n});\n\nfunction ColorlibStepIcon(props) {\n  var _clsx2;\n\n  var classes = useColorlibStepIconStyles();\n  var active = props.active,\n      completed = props.completed;\n  var icons = {\n    1: /*#__PURE__*/React.createElement(SettingsIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 8\n      }\n    }),\n    2: /*#__PURE__*/React.createElement(GroupAddIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 8\n      }\n    }),\n    3: /*#__PURE__*/React.createElement(VideoLabelIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 8\n      }\n    })\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: clsx(classes.root, (_clsx2 = {}, _defineProperty(_clsx2, classes.active, active), _defineProperty(_clsx2, classes.completed, completed), _clsx2)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 5\n    }\n  }, icons[String(props.icon)]);\n}\n\nColorlibStepIcon.propTypes = {\n  /**\n   * Whether this step is active.\n   */\n  active: PropTypes.bool,\n\n  /**\n   * Mark the step as completed. Is passed to child components.\n   */\n  completed: PropTypes.bool,\n\n  /**\n   * The label displayed in the step icon.\n   */\n  icon: PropTypes.node\n};\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      width: '100%'\n    },\n    button: {\n      marginRight: theme.spacing(1)\n    },\n    instructions: {\n      marginTop: theme.spacing(1),\n      marginBottom: theme.spacing(1)\n    }\n  };\n});\n\nfunction getSteps() {\n  return ['Select campaign settings', 'Create an ad group', 'Create an ad'];\n}\n\nfunction getStepContent(step) {\n  switch (step) {\n    case 0:\n      return 'Select campaign settings...';\n\n    case 1:\n      return 'What is an ad group anyways?';\n\n    case 2:\n      return 'This is the bit I really care about!';\n\n    default:\n      return 'Unknown step';\n  }\n}\n\nexport default function CustomizedSteppers() {\n  var _this = this;\n\n  var classes = useStyles();\n\n  var _React$useState = React.useState(1),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      activeStep = _React$useState2[0],\n      setActiveStep = _React$useState2[1];\n\n  var steps = getSteps();\n\n  var handleNext = function handleNext() {\n    setActiveStep(function (prevActiveStep) {\n      return prevActiveStep + 1;\n    });\n  };\n\n  var handleBack = function handleBack() {\n    setActiveStep(function (prevActiveStep) {\n      return prevActiveStep - 1;\n    });\n  };\n\n  var handleReset = function handleReset() {\n    setActiveStep(0);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Stepper, {\n    alternativeLabel: true,\n    activeStep: activeStep,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 7\n    }\n  }, steps.map(function (label) {\n    return /*#__PURE__*/React.createElement(Step, {\n      key: label,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(StepLabel, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 13\n      }\n    }, label));\n  })), /*#__PURE__*/React.createElement(Stepper, {\n    alternativeLabel: true,\n    activeStep: activeStep,\n    connector: /*#__PURE__*/React.createElement(QontoConnector, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 68\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 7\n    }\n  }, steps.map(function (label) {\n    return /*#__PURE__*/React.createElement(Step, {\n      key: label,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(StepLabel, {\n      StepIconComponent: QontoStepIcon,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 13\n      }\n    }, label));\n  })), /*#__PURE__*/React.createElement(Stepper, {\n    alternativeLabel: true,\n    activeStep: activeStep,\n    connector: /*#__PURE__*/React.createElement(ColorlibConnector, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 68\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 7\n    }\n  }, steps.map(function (label) {\n    return /*#__PURE__*/React.createElement(Step, {\n      key: label,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(StepLabel, {\n      StepIconComponent: ColorlibStepIcon,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 13\n      }\n    }, label));\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 7\n    }\n  }, activeStep === steps.length ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.instructions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 13\n    }\n  }, \"All steps completed - you're finished\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: handleReset,\n    className: classes.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 13\n    }\n  }, \"Reset\")) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.instructions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 13\n    }\n  }, getStepContent(activeStep)), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    disabled: activeStep === 0,\n    onClick: handleBack,\n    className: classes.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 15\n    }\n  }, \"Back\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: handleNext,\n    className: classes.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 15\n    }\n  }, activeStep === steps.length - 1 ? 'Finish' : 'Next')))));\n}","map":{"version":3,"sources":["/Users/surajgurung/Desktop/portfoliobuilder/client/src/components/Stepper/index.js"],"names":["React","PropTypes","makeStyles","withStyles","clsx","Stepper","Step","StepLabel","Check","SettingsIcon","GroupAddIcon","VideoLabelIcon","StepConnector","Button","Typography","QontoConnector","alternativeLabel","top","left","right","active","borderColor","completed","line","borderTopWidth","borderRadius","useQontoStepIconStyles","root","color","display","height","alignItems","circle","width","backgroundColor","zIndex","fontSize","QontoStepIcon","props","classes","propTypes","bool","ColorlibConnector","backgroundImage","border","useColorlibStepIconStyles","justifyContent","boxShadow","ColorlibStepIcon","icons","String","icon","node","useStyles","theme","button","marginRight","spacing","instructions","marginTop","marginBottom","getSteps","getStepContent","step","CustomizedSteppers","useState","activeStep","setActiveStep","steps","handleNext","prevActiveStep","handleBack","handleReset","map","label","length"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Check from '@material-ui/icons/Check';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport GroupAddIcon from '@material-ui/icons/GroupAdd';\nimport VideoLabelIcon from '@material-ui/icons/VideoLabel';\nimport StepConnector from '@material-ui/core/StepConnector';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\nconst QontoConnector = withStyles({\n  alternativeLabel: {\n    top: 10,\n    left: 'calc(-50% + 16px)',\n    right: 'calc(50% + 16px)',\n  },\n  active: {\n    '& $line': {\n      borderColor: '#784af4',\n    },\n  },\n  completed: {\n    '& $line': {\n      borderColor: '#784af4',\n    },\n  },\n  line: {\n    borderColor: '#eaeaf0',\n    borderTopWidth: 3,\n    borderRadius: 1,\n  },\n})(StepConnector);\n\nconst useQontoStepIconStyles = makeStyles({\n  root: {\n    color: '#eaeaf0',\n    display: 'flex',\n    height: 22,\n    alignItems: 'center',\n  },\n  active: {\n    color: '#784af4',\n  },\n  circle: {\n    width: 8,\n    height: 8,\n    borderRadius: '50%',\n    backgroundColor: 'currentColor',\n  },\n  completed: {\n    color: '#784af4',\n    zIndex: 1,\n    fontSize: 18,\n  },\n});\n\nfunction QontoStepIcon(props) {\n  const classes = useQontoStepIconStyles();\n  const { active, completed } = props;\n\n  return (\n    <div\n      className={clsx(classes.root, {\n        [classes.active]: active,\n      })}\n    >\n      {completed ? <Check className={classes.completed} /> : <div className={classes.circle} />}\n    </div>\n  );\n}\n\nQontoStepIcon.propTypes = {\n  /**\n   * Whether this step is active.\n   */\n  active: PropTypes.bool,\n  /**\n   * Mark the step as completed. Is passed to child components.\n   */\n  completed: PropTypes.bool,\n};\n\nconst ColorlibConnector = withStyles({\n  alternativeLabel: {\n    top: 22,\n  },\n  active: {\n    '& $line': {\n      backgroundImage:\n        'linear-gradient( 95deg,rgb(242,113,33) 0%,rgb(233,64,87) 50%,rgb(138,35,135) 100%)',\n    },\n  },\n  completed: {\n    '& $line': {\n      backgroundImage:\n        'linear-gradient( 95deg,rgb(242,113,33) 0%,rgb(233,64,87) 50%,rgb(138,35,135) 100%)',\n    },\n  },\n  line: {\n    height: 3,\n    border: 0,\n    backgroundColor: '#eaeaf0',\n    borderRadius: 1,\n  },\n})(StepConnector);\n\nconst useColorlibStepIconStyles = makeStyles({\n  root: {\n    backgroundColor: '#ccc',\n    zIndex: 1,\n    color: '#fff',\n    width: 50,\n    height: 50,\n    display: 'flex',\n    borderRadius: '50%',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  active: {\n    backgroundImage:\n      'linear-gradient( 136deg, rgb(242,113,33) 0%, rgb(233,64,87) 50%, rgb(138,35,135) 100%)',\n    boxShadow: '0 4px 10px 0 rgba(0,0,0,.25)',\n  },\n  completed: {\n    backgroundImage:\n      'linear-gradient( 136deg, rgb(242,113,33) 0%, rgb(233,64,87) 50%, rgb(138,35,135) 100%)',\n  },\n});\n\nfunction ColorlibStepIcon(props) {\n  const classes = useColorlibStepIconStyles();\n  const { active, completed } = props;\n\n  const icons = {\n    1: <SettingsIcon />,\n    2: <GroupAddIcon />,\n    3: <VideoLabelIcon />,\n  };\n\n  return (\n    <div\n      className={clsx(classes.root, {\n        [classes.active]: active,\n        [classes.completed]: completed,\n      })}\n    >\n      {icons[String(props.icon)]}\n    </div>\n  );\n}\n\nColorlibStepIcon.propTypes = {\n  /**\n   * Whether this step is active.\n   */\n  active: PropTypes.bool,\n  /**\n   * Mark the step as completed. Is passed to child components.\n   */\n  completed: PropTypes.bool,\n  /**\n   * The label displayed in the step icon.\n   */\n  icon: PropTypes.node,\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n  },\n  button: {\n    marginRight: theme.spacing(1),\n  },\n  instructions: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n  },\n}));\n\nfunction getSteps() {\n  return ['Select campaign settings', 'Create an ad group', 'Create an ad'];\n}\n\nfunction getStepContent(step) {\n  switch (step) {\n    case 0:\n      return 'Select campaign settings...';\n    case 1:\n      return 'What is an ad group anyways?';\n    case 2:\n      return 'This is the bit I really care about!';\n    default:\n      return 'Unknown step';\n  }\n}\n\nexport default function CustomizedSteppers() {\n  const classes = useStyles();\n  const [activeStep, setActiveStep] = React.useState(1);\n  const steps = getSteps();\n\n  const handleNext = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\n  };\n\n  const handleBack = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\n  };\n\n  const handleReset = () => {\n    setActiveStep(0);\n  };\n\n  return (\n    <div className={classes.root}>\n      <Stepper alternativeLabel activeStep={activeStep}>\n        {steps.map((label) => (\n          <Step key={label}>\n            <StepLabel>{label}</StepLabel>\n          </Step>\n        ))}\n      </Stepper>\n      <Stepper alternativeLabel activeStep={activeStep} connector={<QontoConnector />}>\n        {steps.map((label) => (\n          <Step key={label}>\n            <StepLabel StepIconComponent={QontoStepIcon}>{label}</StepLabel>\n          </Step>\n        ))}\n      </Stepper>\n      <Stepper alternativeLabel activeStep={activeStep} connector={<ColorlibConnector />}>\n        {steps.map((label) => (\n          <Step key={label}>\n            <StepLabel StepIconComponent={ColorlibStepIcon}>{label}</StepLabel>\n          </Step>\n        ))}\n      </Stepper>\n      <div>\n        {activeStep === steps.length ? (\n          <div>\n            <Typography className={classes.instructions}>\n              All steps completed - you&apos;re finished\n            </Typography>\n            <Button onClick={handleReset} className={classes.button}>\n              Reset\n            </Button>\n          </div>\n        ) : (\n          <div>\n            <Typography className={classes.instructions}>{getStepContent(activeStep)}</Typography>\n            <div>\n              <Button disabled={activeStep === 0} onClick={handleBack} className={classes.button}>\n                Back\n              </Button>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={handleNext}\n                className={classes.button}\n              >\n                {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\n              </Button>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}