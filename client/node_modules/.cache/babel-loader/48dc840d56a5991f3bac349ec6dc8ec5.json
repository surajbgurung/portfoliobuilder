{"ast":null,"code":"import axios from \"axios\"; // Front end route for signup\n\nexport var register = function register(newUser) {\n  return axios.post(\"api/users\", {\n    firstName: newUser.firstName,\n    lastName: newUser.lastName,\n    email: newUser.email,\n    password: newUser.password\n  }).then(function (response) {\n    console.log(\"Registered\");\n  });\n}; // Route for login\n\nexport var login = function login(user) {\n  return axios.post(\"api/auth\", {\n    email: user.email,\n    password: user.password\n  }).then(function (response) {\n    console.log(\"from the api.js\", response);\n\n    if (response.data.token) {\n      localStorage.setItem(\"user\", response.data.token);\n    }\n\n    console.log(response.data.token);\n    return response.data;\n  }).catch(function (err) {\n    console.log(err); // Handling the error and reload page\n\n    alert(\"Please enter valid information\");\n    window.location.reload();\n  });\n}; //Routing for geeting name from user profile only to home page\n\nexport var home = function home(user) {\n  return axios.get(\"api/auth\", {\n    headers: {\n      \"x-auth-token\": JSON.stringify(localStorage.getItem(\"user\")).replace(/['\"]+/g, \"\")\n    }\n  }).then(function (response) {\n    // console.log(response);\n    return response.data;\n  }).catch(function (err) {\n    console.log(err);\n  });\n}; // Route for getting main profile\n\nexport var mainProfile = function mainProfile(user) {\n  return axios.get(\"api/profile/me\", {\n    headers: {\n      \"x-auth-token\": JSON.stringify(localStorage.getItem(\"user\")).replace(/['\"]+/g, \"\")\n    }\n  }).then(function (response) {\n    // console.log(response);\n    return response.data;\n  }).catch(function (err) {\n    console.log(err);\n  });\n};\nexport function getCurrentUser() {\n  return JSON.parse(localStorage.getItem(\"user\"));\n}\nexport function logout() {\n  localStorage.removeItem(\"user\");\n} // Post route for profile from wizard\n\nexport var profile = function profile(newUser) {\n  console.log(\"from api\", newUser);\n  return axios.post(\"api/profile\", {\n    navColor: newUser.navColor,\n    navText: newUser.navText,\n    navImage: newUser.navImage,\n    introText: newUser.introText,\n    introTitle: newUser.introTitle,\n    bio: newUser.bio,\n    aboutBgColor: newUser.aboutBgColor,\n    profileImage: newUser.profileImage,\n    ProjectOneTitle: newUser.ProjectOneTitle,\n    ProjectOneText: newUser.ProjectOneText,\n    ProjectOneUrl: newUser.ProjectOneUrl,\n    ProjectTwoTitle: newUser.ProjectTwoTitle,\n    ProjectTwoText: newUser.ProjectTwoText,\n    ProjectTwoUrl: newUser.ProjectTwoUrl,\n    ProjectThreeTitle: newUser.ProjectThreeTitle,\n    ProjectThreeText: newUser.ProjectThreeText,\n    ProjectThreeUrl: newUser.ProjectThreeUrl,\n    resumeUrl: newUser.resumeUrl,\n    githubLink: newUser.githubLink,\n    linkdin: newUser.linkdin,\n    footer: newUser.footer\n  }, {\n    headers: {\n      \"x-auth-token\": JSON.stringify(localStorage.getItem(\"user\")).replace(/['\"]+/g, \"\")\n    }\n  }).then(function (response) {\n    console.log(\"profile send to backend\");\n    return response.data;\n  }).catch(function (err) {\n    console.log(err);\n  });\n};\nexport var generatepage = function generatepage(data) {\n  return axios.post(\"api/generatepage\", {\n    'page': data\n  }).then(function (response) {\n    console.log(\"This new page holds - \", response);\n  });\n};","map":{"version":3,"sources":["/Users/surajgurung/Desktop/portfoliobuilder/client/src/utils/api.js"],"names":["axios","register","newUser","post","firstName","lastName","email","password","then","response","console","log","login","user","data","token","localStorage","setItem","catch","err","alert","window","location","reload","home","get","headers","JSON","stringify","getItem","replace","mainProfile","getCurrentUser","parse","logout","removeItem","profile","navColor","navText","navImage","introText","introTitle","bio","aboutBgColor","profileImage","ProjectOneTitle","ProjectOneText","ProjectOneUrl","ProjectTwoTitle","ProjectTwoText","ProjectTwoUrl","ProjectThreeTitle","ProjectThreeText","ProjectThreeUrl","resumeUrl","githubLink","linkdin","footer","generatepage"],"mappings":"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","sourcesContent":["import axios from \"axios\";\n\n// Front end route for signup\nexport const register = (newUser) => {\n  return axios\n    .post(\"api/users\", {\n      firstName: newUser.firstName,\n      lastName: newUser.lastName,\n      email: newUser.email,\n      password: newUser.password,\n    })\n    .then((response) => {\n      console.log(\"Registered\");\n    });\n};\n\n// Route for login\nexport const login = (user) => {\n  return axios\n    .post(\"api/auth\", {\n      email: user.email,\n      password: user.password,\n    })\n    .then((response) => {\n      console.log(\"from the api.js\", response);\n      if (response.data.token) {\n        localStorage.setItem(\"user\", response.data.token);\n      }\n      console.log(response.data.token);\n      return response.data;\n    })\n    .catch((err) => {\n      console.log(err);\n      // Handling the error and reload page\n      alert(\"Please enter valid information\");\n      window.location.reload();\n    });\n};\n\n//Routing for geeting name from user profile only to home page\nexport const home = (user) => {\n  return axios\n    .get(\"api/auth\", {\n      headers: {\n        \"x-auth-token\": JSON.stringify(localStorage.getItem(\"user\")).replace(/['\"]+/g,\"\")\n      }\n    })\n    .then((response) => {\n      // console.log(response);\n      return response.data;\n    })\n    .catch((err) => {\n      console.log(err);\n    });\n};\n\n\n// Route for getting main profile\nexport const mainProfile = (user) => {\n  return axios\n    .get(\"api/profile/me\", {\n      headers: {\n        \"x-auth-token\": JSON.stringify(localStorage.getItem(\"user\")).replace(/['\"]+/g,\"\")\n      }\n    })\n    .then((response) => {\n      // console.log(response);\n      return response.data;\n    })\n    .catch((err) => {\n      console.log(err);\n    });\n};\n\nexport function getCurrentUser() {\n  return JSON.parse(localStorage.getItem(\"user\"));\n}\n\nexport function logout() {\n  localStorage.removeItem(\"user\");\n}\n\n// Post route for profile from wizard\nexport const profile = (newUser) => {\n  console.log(\"from api\", newUser);\n  return axios\n    .post(\n      \"api/profile\",\n      {\n        navColor: newUser.navColor,\n        navText: newUser.navText,\n        navImage: newUser.navImage,\n        introText: newUser.introText,\n        introTitle: newUser.introTitle,\n        bio: newUser.bio,\n        aboutBgColor: newUser.aboutBgColor,\n        profileImage: newUser.profileImage,\n        ProjectOneTitle: newUser.ProjectOneTitle,\n        ProjectOneText: newUser.ProjectOneText,\n        ProjectOneUrl: newUser.ProjectOneUrl,\n        ProjectTwoTitle: newUser.ProjectTwoTitle,\n        ProjectTwoText: newUser.ProjectTwoText,\n        ProjectTwoUrl: newUser.ProjectTwoUrl,\n        ProjectThreeTitle: newUser.ProjectThreeTitle,\n        ProjectThreeText: newUser.ProjectThreeText,\n        ProjectThreeUrl: newUser.ProjectThreeUrl,\n        resumeUrl: newUser.resumeUrl,\n        githubLink: newUser.githubLink,\n        linkdin: newUser.linkdin,\n        footer: newUser.footer,\n      },\n      {\n        headers: {\n          \"x-auth-token\": JSON.stringify(localStorage.getItem(\"user\")).replace(/['\"]+/g,\"\")\n        }\n      }\n    )\n    .then((response) => {\n      console.log(\"profile send to backend\");\n      return response.data;\n    })\n    .catch((err) => {\n      console.log(err);\n    });\n};\n\nexport const generatepage = (data) => {\n  return axios\n    .post(\"api/generatepage\", {\n      'page': data,\n    })\n    .then((response) => {\n      console.log(\"This new page holds - \", response);\n    })\n};\n"]},"metadata":{},"sourceType":"module"}